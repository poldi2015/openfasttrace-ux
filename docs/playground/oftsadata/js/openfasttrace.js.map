{"version":3,"file":"js/openfasttrace.js","mappings":"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","sources":["webpack://openfasttrace-ux/./src/main/js/controller/oft_state_builder.ts","webpack://openfasttrace-ux/./src/main/js/controller/oft_state_controller.ts","webpack://openfasttrace-ux/./src/main/js/controller/spec_items_controller.ts","webpack://openfasttrace-ux/./src/main/js/model/change_event.ts","webpack://openfasttrace-ux/./src/main/js/model/filter.ts","webpack://openfasttrace-ux/./src/main/js/model/oft_state.ts","webpack://openfasttrace-ux/./src/main/js/model/oft_state_history.ts","webpack://openfasttrace-ux/./src/main/js/model/project.ts","webpack://openfasttrace-ux/./src/main/js/model/specitems.ts","webpack://openfasttrace-ux/./src/main/js/utils/async.ts","webpack://openfasttrace-ux/./src/main/js/utils/collections.ts","webpack://openfasttrace-ux/./src/main/js/utils/log.ts","webpack://openfasttrace-ux/./src/main/js/view/button_element.ts","webpack://openfasttrace-ux/./src/main/js/view/details_element.ts","webpack://openfasttrace-ux/./src/main/js/view/expandable_elements.ts","webpack://openfasttrace-ux/./src/main/js/view/filter_element.ts","webpack://openfasttrace-ux/./src/main/js/view/filters_element.ts","webpack://openfasttrace-ux/./src/main/js/view/focus_spec_item_element.ts","webpack://openfasttrace-ux/./src/main/js/view/navbar_element.ts","webpack://openfasttrace-ux/./src/main/js/view/search_element.ts","webpack://openfasttrace-ux/./src/main/js/view/spec_item_element.ts","webpack://openfasttrace-ux/./src/main/js/view/spec_items_element.ts","webpack://openfasttrace-ux/webpack/bootstrap","webpack://openfasttrace-ux/webpack/runtime/make namespace object","webpack://openfasttrace-ux/./src/main/js/openfasttrace.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OftStateBuilder = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst oft_state_1 = require(\"@main/model/oft_state\");\nconst filter_1 = require(\"@main/model/filter\");\nclass OftStateBuilder {\n    constructor(oftState = new oft_state_1.OftState()) {\n        this.oftState = oftState;\n    }\n    fromModel(fieldConfigurations, specItems) {\n        if (specItems.length > 0) {\n            this.oftState.selectedIndex = 0;\n        }\n        else {\n            this.oftState.selectedIndex = null;\n        }\n        Object.entries(fieldConfigurations).forEach(([filterName, _]) => {\n            this.oftState.selectedFilters.set(filterName, new filter_1.SelectionFilter(filterName, []));\n        });\n        return this;\n    }\n    setSelectedIndex(selectedIndex) {\n        console.log(\"OftStateBuilder.setSelectedIndex: \" + selectedIndex);\n        this.oftState.selectedIndex = selectedIndex;\n        return this;\n    }\n    setSelectedFilters(selectedFilters) {\n        this.oftState.selectedFilters = selectedFilters;\n        return this;\n    }\n    setFocusIndex(value) {\n        this.oftState.focusIndex = value;\n    }\n    setUnfocusedFilters(unfocusedFilters) {\n        this.oftState.unfocusedFilters = unfocusedFilters;\n        return this;\n    }\n    setFocusType(value) {\n        this.oftState.coverType = value;\n    }\n    build() {\n        return this.oftState.clone();\n    }\n} // VolatileOftState\nexports.OftStateBuilder = OftStateBuilder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OftStateController = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst oft_state_1 = require(\"@main/model/oft_state\");\nconst oft_state_builder_1 = require(\"./oft_state_builder\");\nconst log_1 = require(\"@main/utils/log\");\nconst filter_1 = require(\"@main/model/filter\");\nconst change_event_1 = require(\"@main/model/change_event\");\nconst oft_state_history_1 = require(\"@main/model/oft_state_history\");\n/**\n * This OftStateController stores the global state of the application.\n *\n * When the state changes events of type {@link ChangeEvent} are emitted to all registered listeners.\n */\nclass OftStateController {\n    constructor(oftState = new oft_state_builder_1.OftStateBuilder().build(), oftStateHistory = new oft_state_history_1.OftStateHistory()) {\n        this.oftState = oftState;\n        this.oftStateHistory = oftStateHistory;\n        this.changeListeners = new Map();\n        this.isInitialized = false;\n        this.log = new log_1.Log(\"OftStateController\");\n    }\n    /**\n     * Initialize the OftStateController.\n     *\n     * Communicates the current state by emitting all change event types to registered listeners.\n     */\n    init() {\n        const initialChangeEvent = this.createChangeEvent(change_event_1.EventType.Selection, change_event_1.EventType.Filters, change_event_1.EventType.Focus);\n        this.oftStateHistory.init(initialChangeEvent);\n        this.sendChangeEvent(initialChangeEvent); // Bootstrap already connected listeners.\n        this.isInitialized = true;\n    }\n    //\n    // State\n    //\n    // selected SpecItem\n    /**\n     * Changes the selection to the given index.\n     *\n     * This method must only be called when it can be ensured that the given indexed item is not filtered out.\n     *\n     * @param index the index of a not filtered item or empty to scroll to the current selection\n     */\n    selectItem(index = this.oftState.selectedIndex) {\n        this.log.info(\"selectItem \", index);\n        if (index != this.oftState.selectedIndex) {\n            this.oftState.selectedIndex = index;\n            this.notifyChangeWithHistory(change_event_1.EventType.Selection);\n        }\n        else {\n            // Just trigger scrolling to the current index\n            this.notifyChangeWithoutHistory(change_event_1.EventType.Selection);\n        }\n    }\n    /**\n     * Changes selection snd scroll to the selected item ensuring that item can be shown by disabling filters.\n     *\n     * @param index the new selection\n     */\n    selectAndShowItem(index) {\n        this.log.info(\"selectAndShowItem\", index);\n        if (index != this.oftState.focusIndex) {\n            // Disable filters if item is not the focused one which is always visible.\n            this.oftState.selectedFilters.clear();\n        }\n        if (this.oftState.selectedIndex != index) {\n            this.oftState.selectedIndex = index;\n            this.oftState.selectedFilters = new Map();\n            this.notifyChangeWithHistory(change_event_1.EventType.Selection, change_event_1.EventType.Filters);\n        }\n        else {\n            this.notifyChangeWithoutHistory(change_event_1.EventType.Selection);\n        }\n    }\n    /**\n     * Removes the current selection if there is one.\n     */\n    unselectItem() {\n        this.log.info(\"unselectItem\", this.oftState.selectedIndex);\n        if (this.oftState.selectedIndex == null)\n            return;\n        this.oftState.selectedIndex = null;\n        this.notifyChangeWithoutHistory(change_event_1.EventType.Selection);\n    }\n    //\n    // FocusItem\n    /**\n     * Focus and item or change the coverage of a focused item.\n     *\n     * @param index the focus\n     * @param coverType The type of the focus\n     * @param filters Filter for non focused elements\n     */\n    focusItem(index, coverType, filters = null) {\n        this.log.info(\"focusItem\", index);\n        if (this.createFocus(index, coverType, filters) ||\n            this.adjustFocus(index, coverType, filters)) {\n            this.notifyChangeWithHistory(change_event_1.EventType.Selection, change_event_1.EventType.Focus, change_event_1.EventType.Filters);\n        }\n    }\n    createFocus(index, coverType, filters = null) {\n        if (this.oftState.focusIndex == index)\n            return false;\n        this.oftState.focusIndex = index;\n        this.oftState.coverType = coverType;\n        this.oftState.selectedIndex = null;\n        this.oftState.unfocusedFilters = this.oftState.selectedFilters;\n        this.oftState.unfocusedFilters.delete(filter_1.IndexFilter.FILTER_NAME);\n        if (filters != null)\n            this.oftState.selectedFilters = filters;\n        this.log.info(\"focusing item\", this.oftState);\n        return true;\n    }\n    adjustFocus(index, coverType, filters = null) {\n        if (this.oftState.focusIndex != index)\n            return false;\n        this.oftState.coverType = coverType;\n        if (filters != null) {\n            filters.forEach((value, key) => {\n                this.oftState.selectedFilters.set(key, value);\n            });\n        }\n        this.log.info(\"adjust focus\", this.oftState);\n        return true;\n    }\n    unFocusItem(index) {\n        this.log.info(\"unfocusItem\", index);\n        if (this.oftState.focusIndex != index)\n            return;\n        if (this.oftState.focusIndex == null)\n            return;\n        this.oftState.selectedIndex = index;\n        this.oftState.focusIndex = null;\n        this.oftState.coverType = oft_state_1.CoverType.covering;\n        this.log.info(\"unFocusItem: unfocusedFilters=\", this.oftState.unfocusedFilters);\n        this.oftState.selectedFilters = this.oftState.unfocusedFilters;\n        this.oftState.unfocusedFilters = new Map();\n        this.notifyChangeWithHistory(change_event_1.EventType.Focus, change_event_1.EventType.Filters, change_event_1.EventType.Selection);\n    }\n    //\n    // Filters\n    /**\n     * Changes or appends filters to he existing filter list.\n     *\n     * Even triggers a change event even if no filters changed.\n     *\n     * @param filters the filters to change or add\n     */\n    selectFilters(filters = new Map()) {\n        this.log.info(\"selectFilters filters\", filters);\n        if (filters.size > 0) {\n            filters.forEach((value, key) => {\n                this.oftState.selectedFilters.set(key, value);\n            });\n            this.log.info(\"selectFilters oftState.\", this.oftState.selectedFilters);\n            // Selection is needed for switch to previous state as filter may void the selection\n            this.notifyChangeWithHistory(change_event_1.EventType.Filters, change_event_1.EventType.Selection);\n        }\n        else {\n            // Selection is needed for switch to previous state as filter may void the selection\n            this.notifyChangeWithoutHistory(change_event_1.EventType.Filters, change_event_1.EventType.Selection);\n        }\n    }\n    /**\n     * Resets all filters to not filtering.\n     *\n     * Even triggers a change event even if no filters changed.\n     */\n    clearFilters() {\n        if (this.oftState.selectedFilters.size > 0) {\n            this.oftState.selectedFilters.clear();\n            this.notifyChangeWithHistory(change_event_1.EventType.Filters);\n        }\n        else {\n            this.notifyChangeWithoutHistory(change_event_1.EventType.Filters);\n        }\n    }\n    //\n    // History\n    /**\n     * switch the state to the previous (older) state.\n     */\n    toPreviousState() {\n        this.log.info(\"toPreviousState\");\n        const changeEvent = this.oftStateHistory.toPreviousState();\n        if (changeEvent == null)\n            return;\n        this.oftState.copyFrom(changeEvent.oftState);\n        this.sendChangeEvent(changeEvent);\n    }\n    /**\n     * switch the state to the next (newer) state.\n     */\n    toNextState() {\n        this.log.info(\"toNextState\");\n        const changeEvent = this.oftStateHistory.toNextState();\n        if (changeEvent == null)\n            return;\n        this.oftState.copyFrom(changeEvent.oftState);\n        this.sendChangeEvent(changeEvent);\n    }\n    //\n    // Listeners\n    /**\n     * Adds a new listener for listening to state changes.\n     *\n     * Send an initial event\n     *\n     * @param eventTypes the type of the event\n     * @param listener the listener\n     * // TODO remove eventTypes\n     */\n    addChangeListener(listener, ...eventTypes) {\n        eventTypes.forEach((eventType) => {\n            const listeners = this.changeListeners.has(eventType) ?\n                this.changeListeners.get(eventType) : new Array();\n            listeners.push(listener);\n            this.changeListeners.set(eventType, listeners);\n        });\n        this.initializeListener(listener);\n    }\n    /**\n     * Sends a change event to a newly added listener with all event types when listener is added after initialization.\n     *\n     * @param listener the listener to inform\n     */\n    initializeListener(listener) {\n        if (!this.isInitialized)\n            return;\n        listener(new change_event_1.ChangeEvent(change_event_1.eventTypeIds, this.oftState.clone()));\n    }\n    /**\n     * Removes a listener from the list of registered listeners.\n     *\n     * @param listener The listener to remove\n     */\n    removeChangeListener(listener) {\n        const changeListeners = new Map();\n        this.changeListeners.forEach((listeners, eventTypes, _) => {\n            changeListeners.set(eventTypes, listeners.filter((item) => item != listener));\n        });\n        this.changeListeners = changeListeners;\n    }\n    //\n    // private\n    /**\n     * Send change events to all listeners and put the current state to the history of state changes.\n     *\n     * @param eventTypes The events to be issued.\n     */\n    notifyChangeWithHistory(...eventTypes) {\n        this.log.info(\"notifyChangeWithHistory\", ...eventTypes);\n        const changeEvent = this.oftStateHistory.pushEvent(this.createChangeEvent(...eventTypes));\n        this.sendChangeEvent(changeEvent);\n    }\n    /**\n     * Sends events to all listeners without putting the state change to the history.\n     *\n     * @param eventTypes the types of event to issue\n     */\n    notifyChangeWithoutHistory(...eventTypes) {\n        this.log.info(\"notifyChangeWithoutHistory\", ...eventTypes);\n        const changeEvent = this.createChangeEvent(...eventTypes);\n        this.sendChangeEvent(changeEvent);\n    }\n    /**\n     * Creates an instance of {@link EventType} initialized with the current state and the given list of event types.\n     *\n     * @param eventTypes list of event types or empty if all event types should be used\n     * @return A {@link ChangeEvent}\n     */\n    createChangeEvent(...eventTypes) {\n        const types = eventTypes.length == 0 ? change_event_1.eventTypeIds : Array.of(...eventTypes);\n        return new change_event_1.ChangeEvent(types, this.oftState.clone());\n    }\n    /**\n     * send event to all listeners.\n     *\n     * @param changeEvent The event to send\n     */\n    sendChangeEvent(changeEvent) {\n        this.log.info(\"sendChangeEvent\", changeEvent);\n        const listeners = new Set(Array.of(...this.changeListeners)\n            .filter(([eventType, _]) => changeEvent.types.includes(eventType))\n            .flatMap(([_, listener]) => listener));\n        listeners.forEach((listener) => listener(changeEvent));\n    }\n} // OftState\nexports.OftStateController = OftStateController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpecItemsController = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst spec_item_element_1 = require(\"@main/view/spec_item_element\");\nconst log_1 = require(\"@main/utils/log\");\nconst focus_spec_item_element_1 = require(\"@main/view/focus_spec_item_element\");\nconst change_event_1 = require(\"@main/model/change_event\");\nconst FOCUS_SPECITEM_ELEMENT_ID = \"#focusitem\";\nconst SPECITEMS_ELEMENT_ID = \"#specitems\";\nclass SpecItemsController {\n    constructor(oftStateController, specItemsElement, project) {\n        this.oftStateController = oftStateController;\n        this.specItemsElement = specItemsElement;\n        this.project = project;\n        this.log = new log_1.Log(\"SpecItemsController\");\n        this.focusSpecItemElement = null;\n        this.selectedIndex = null;\n        this.specItems = new Map();\n        this.specItemElements = [];\n        this.specItemToElement = new Array();\n        this.filterOrFocusChangeListener = (event) => {\n            event.handleFocusChange((focusIndex, coverType, _) => this.focusChange(focusIndex, coverType));\n            event.handleFilterChange((filters, oftState) => this.filterChange(filters, oftState));\n        };\n        this.selectionChangeListener = (event) => {\n            const selectedIndex = event.oftState.selectedIndex;\n            this.selectSpecItem(selectedIndex);\n            this.scrollToSpecItem(selectedIndex);\n        };\n        this._specItemsElement = $(SPECITEMS_ELEMENT_ID);\n    }\n    init(specItems) {\n        this.log.info(\"init specitemCount\", specItems.length);\n        this.oftStateController.addChangeListener(this.filterOrFocusChangeListener, change_event_1.EventType.Focus, change_event_1.EventType.Filters);\n        this.oftStateController.addChangeListener(this.selectionChangeListener, change_event_1.EventType.Selection);\n        specItems.forEach((specItem) => {\n            const specItemElement = this.createSpecItemElement(specItem);\n            this.insertSpecItemAt(specItemElement);\n            this.specItemToElement.push([specItem, specItemElement]);\n            this.specItems.set(specItem.index, specItem);\n        });\n    }\n    // Initialize Elements\n    createSpecItemElement(specItem) {\n        return new spec_item_element_1.SpecItemElement(specItem, this.oftStateController, this.project);\n    }\n    createFocusSpecItemElement(specItem, coverType) {\n        if (specItem == null)\n            this.log.info(\"SPECITEM MUST NOT BE NULL\");\n        this.log.info(\"createFocusSpecItemElement index\", specItem.index, \"coverType\", coverType);\n        return new focus_spec_item_element_1.FocusSpecItemElement(specItem, coverType, this.oftStateController, this.project);\n    }\n    insertSpecItemAt(specItem, index = -1) {\n        specItem.insertToAt(this._specItemsElement, index);\n        specItem.activate();\n        this.specItemElements.push(specItem);\n    }\n    setFocusSpecItem(specItem, coverType) {\n        var _a, _b;\n        this.log.info(\"setFocusSpecItem index\", specItem === null || specItem === void 0 ? void 0 : specItem.index, \"coverType\", coverType);\n        if (specItem == null) {\n            // focus gets removed\n            this.log.info(\"setFocusSpecItem remove\");\n            this.removeFocusSpecItem();\n            $(FOCUS_SPECITEM_ELEMENT_ID).hide();\n        }\n        else if (((_a = this.focusSpecItemElement) === null || _a === void 0 ? void 0 : _a.specItem.index) != (specItem === null || specItem === void 0 ? void 0 : specItem.index)) {\n            // focused element gets replaced\n            this.log.info(\"setFocusSpecItem replace\");\n            this.removeFocusSpecItem();\n            $(FOCUS_SPECITEM_ELEMENT_ID).show();\n            this.focusSpecItemElement = this.createFocusSpecItemElement(specItem, coverType);\n            this.focusSpecItemElement.insertToAt($(FOCUS_SPECITEM_ELEMENT_ID), 0);\n            this.focusSpecItemElement.activate();\n            this.focusSpecItemElement.select();\n        }\n        else if (((_b = this.focusSpecItemElement) === null || _b === void 0 ? void 0 : _b.specItem.index) == (specItem === null || specItem === void 0 ? void 0 : specItem.index)) {\n            // Switch coverType\n            this.log.info(\"setFocusSpecItem switch\");\n            this.focusSpecItemElement.select();\n            this.focusSpecItemElement.cover(coverType);\n        }\n    }\n    removeFocusSpecItem() {\n        this.log.info(\"removeFocusSpecItem\");\n        if (this.focusSpecItemElement != null) {\n            this.focusSpecItemElement.remove();\n            this.focusSpecItemElement = null;\n        }\n    }\n    //\n    // Change listeners\n    /**\n     * Adapt the focused item.\n     *\n     * @param focusIndex focused item index or null for disabling\n     * @param coverType the coverType of the focused element\n     */\n    focusChange(focusIndex, coverType) {\n        this.log.info(`focusChange focusIndex ${focusIndex} coverType ${coverType}`);\n        // Update focus element\n        if (focusIndex == null) {\n            // Hide focus item\n            this.removeFocusSpecItem();\n        }\n        else {\n            // show Focus item\n            const focusedSpecItem = this.specItems.get(focusIndex);\n            this.setFocusSpecItem(focusedSpecItem, coverType);\n        }\n    }\n    //\n    // Show items based on filters\n    /**\n     * Called when the filters changed their selection.\n     *\n     * All specItems matching the filters are made visible, all non matching are made invisible.\n     *\n     * @param filterChanged the currently active filters\n     * @param oftState changed [{@}link ]OftState}\n     */\n    filterChange(filterChanged, oftState) {\n        this.log.info(\"filterChange\", filterChanged);\n        const selectedFilters = Array.from(filterChanged);\n        const filteredSpecItems = SpecItemsController.getSpecItemsMatchingFilters(this.specItemToElement, selectedFilters);\n        this.showOnlySelectedSpecItemElements(filteredSpecItems, oftState.selectedIndex);\n    }\n    /**\n     * Filters SpecItem from the list of all SpecItems that match all filters.\n     *\n     * @param specItemToElement 1:1 mapping of SpecItem to SpecItemElement\n     * @param selectedFilters active filters\n     */\n    static getSpecItemsMatchingFilters(specItemToElement, selectedFilters) {\n        return specItemToElement\n            .filter(([specItem, _]) => {\n            return SpecItemsController.isMatchingAllFilters(specItem, selectedFilters);\n        })\n            .map(([_, specItemElement]) => specItemElement);\n    }\n    /**\n     * @param specItem The SpecItem to validate\n     * @param selectedFilters The filters\n     * @return true if the specItem matches all filters\n     * @private\n     */\n    static isMatchingAllFilters(specItem, selectedFilters) {\n        return selectedFilters.every(([_, filter]) => filter.matches(specItem));\n    }\n    /**\n     * Shows selected SpecItemElements and hides the others.\n     *\n     * IF the selected specItem is hidden then an {@link unselectItem} is sent.\n     *\n     * @param specItemElements The specItems to show\n     * @param selectedIndex Index of the SpecItem that currently has the selection or null if none has the sepecItem\n     */\n    showOnlySelectedSpecItemElements(specItemElements, selectedIndex) {\n        this.specItemElements.forEach((specItemElement) => {\n            if (specItemElements.includes(specItemElement)) {\n                specItemElement.activate();\n            }\n            else {\n                specItemElement.deactivate();\n                if (specItemElement.specItem.index == selectedIndex)\n                    this.oftStateController.unselectItem();\n            }\n        });\n        this.specItemsElement.updateNumberOfItems(specItemElements.length, this.focusSpecItemElement != null);\n    }\n    /**\n     * Changes the selection to the given index or unselect if index = null.\n     *\n     * notfify an unselect if new indexed item is deactivated (by filter).\n     *\n     * @param index the new index or null\n     * @private\n     */\n    selectSpecItem(index) {\n        var _a, _b;\n        this.log.info(\"selectItem\", index, \"replaces\", this.selectedIndex, index === this.selectedIndex);\n        if (index === this.selectedIndex)\n            return;\n        // unselect current selection\n        if (this.selectedIndex != null)\n            (_a = this.specItemElements[this.selectedIndex]) === null || _a === void 0 ? void 0 : _a.unselect();\n        // TODO unfocus focus element\n        // select requested selection\n        if (index != null) {\n            const newSelectedItemElement = this.specItemElements[index];\n            if (newSelectedItemElement == undefined || !newSelectedItemElement.isActive()) {\n                this.oftStateController.unselectItem();\n            }\n            else {\n                (_b = this.specItemElements[index]) === null || _b === void 0 ? void 0 : _b.select();\n                this.selectedIndex = index;\n            }\n        }\n    }\n    scrollToSpecItem(index) {\n        this.log.info(\"scrollToSpecItem\", index);\n        if (index == null || index < 0 || index >= this.specItemElements.length)\n            return false;\n        const specItemElement = this.specItemElements[index];\n        if (!specItemElement.isActive())\n            return false;\n        const scrollTop = this._specItemsElement.scrollTop();\n        const visibleHeight = this._specItemsElement.outerHeight();\n        if (scrollTop == undefined || visibleHeight == undefined)\n            return false;\n        const scrollBottom = scrollTop + visibleHeight;\n        const elementScrollPosition = specItemElement.getScrollPosition();\n        this.log.info(\"Scrolls\", scrollTop, scrollBottom, elementScrollPosition);\n        if (elementScrollPosition >= scrollTop && elementScrollPosition <= scrollBottom)\n            return true;\n        this.log.info(\"Scroll to\", elementScrollPosition);\n        this._specItemsElement.scrollTop(elementScrollPosition);\n        return true;\n    }\n} // SpecItemsElement\nexports.SpecItemsController = SpecItemsController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangeEvent = exports.eventTypeIds = exports.eventTypeValues = exports.EventType = void 0;\nconst collections_1 = require(\"@main/utils/collections\");\n/**\n * Changed element by a change of the {@link OftState}.\n */\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"Selection\"] = 0] = \"Selection\";\n    EventType[EventType[\"Filters\"] = 1] = \"Filters\";\n    EventType[EventType[\"Focus\"] = 2] = \"Focus\";\n})(EventType || (exports.EventType = EventType = {})); // EventType\n/**\n * String names of the {@link EventType} values;\n */\nexports.eventTypeValues = (0, collections_1.enumNames)(EventType);\n/**\n * Numeric IDs of the {@link EventType} values;\n */\nexports.eventTypeIds = (0, collections_1.enumIds)(EventType);\n/**\n * Emitted when the state of the OftState changes.\n */\nclass ChangeEvent {\n    constructor(types, oftState) {\n        this.types = types;\n        this.oftState = oftState;\n    }\n    /**\n     * * Handler is called If selection changed.\n     */\n    handleSelectionChange(handler) {\n        if (this.has(EventType.Selection))\n            handler(this.oftState.selectedIndex, this.oftState);\n    }\n    /**\n     * Handler is called of focus changed.\n     */\n    handleFocusChange(handler) {\n        if (this.has(EventType.Focus))\n            handler(this.oftState.focusIndex, this.oftState.coverType, this.oftState);\n    }\n    /**\n     * Handler is called when filters changed.\n     */\n    handleFilterChange(handler) {\n        if (this.has(EventType.Filters))\n            handler(this.oftState.selectedFilters, this.oftState);\n    }\n    /**\n     * true of event includes the given eventType.\n     */\n    has(eventType) {\n        return this.types.includes(eventType);\n    }\n} // ChangeEvent\nexports.ChangeEvent = ChangeEvent;\n","\"use strict\";\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameFilter = exports.NameFilterTarget = exports.IndexFilter = exports.SelectionFilter = exports.Filter = void 0;\n//\n// FilterModel\n/**\n * Apply a filter to a SpecItem.\n */\nclass Filter {\n    constructor(filterName) {\n        this.filterName = filterName;\n    }\n} // Filter\nexports.Filter = Filter;\n/**\n * A Filter that filters SpecItems based on a list of selected entries.\n *\n * This filter is used for the sidebar filters.\n */\nclass SelectionFilter extends Filter {\n    constructor(filterName, filterIndexes) {\n        super(filterName);\n        this.filterIndexes = filterIndexes;\n    }\n    matches(specItem) {\n        if (this.filterIndexes.length == 0)\n            return true;\n        const specItemValues = this.getSpecItemValuesByFilterName(specItem, this.filterName);\n        if (specItemValues == undefined)\n            return false;\n        return specItemValues.some((value) => this.filterIndexes.includes(value));\n    }\n    getSpecItemValuesByFilterName(specItem, filterName) {\n        // TODO improve performance\n        if (!Object.keys(specItem).includes(filterName))\n            return undefined;\n        return Object.entries(specItem)\n            .filter(([key, _]) => key == filterName)\n            .map(([_, value]) => {\n            if (Array.isArray(value)) {\n                // Covering filter: covers, coveredBy etc.\n                return value;\n            }\n            else if (typeof value == \"number\") {\n                // Type and Status\n                return [value];\n            }\n            return [];\n        }).flat();\n    }\n} // SelectionFilter\nexports.SelectionFilter = SelectionFilter;\n/**\n * A filter that applies for all SpecItems with an index matching a list of accepted indexes.\n *\n * If the accepted indexes == null than it matches all SpecItems.\n */\nclass IndexFilter extends Filter {\n    constructor(acceptedIndexes) {\n        super(IndexFilter.FILTER_NAME);\n        this.acceptedIndexes = acceptedIndexes;\n    }\n    matches(specItem) {\n        return this.acceptedIndexes == null || this.acceptedIndexes.includes(specItem.index);\n    }\n} // IndexFilter\nexports.IndexFilter = IndexFilter;\nIndexFilter.FILTER_NAME = \"%index%\";\nvar NameFilterTarget;\n(function (NameFilterTarget) {\n    NameFilterTarget[NameFilterTarget[\"name\"] = 0] = \"name\";\n    NameFilterTarget[NameFilterTarget[\"content\"] = 1] = \"content\";\n})(NameFilterTarget || (exports.NameFilterTarget = NameFilterTarget = {})); // NameFilterTarget\n/**\n * A filter that filters SpecItems that contains a specific string or matches a regular expression.\n */\nclass NameFilter extends Filter {\n    constructor(acceptedName, isRegExp = false, nameFilterTarget = NameFilterTarget.name) {\n        super(NameFilter.FILTER_NAME);\n        this.acceptedName = acceptedName;\n        this.isRegExp = isRegExp;\n        this.nameFilterTarget = nameFilterTarget;\n    }\n    matches(specItem) {\n        if (this.acceptedName == \"\")\n            return true;\n        const specItemValues = this.nameFilterTarget == NameFilterTarget.name ?\n            Array.of(specItem.title, specItem.id) :\n            Array.of(specItem.content);\n        return specItemValues.map((value) => this.isRegExp ? value.match(this.acceptedName) != null : value.includes(this.acceptedName.toLowerCase())).some((value) => value);\n    }\n} // NameFilter\nexports.NameFilter = NameFilter;\nNameFilter.FILTER_NAME = \"%name%\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OftState = exports.CoverType = void 0;\nvar CoverType;\n(function (CoverType) {\n    CoverType[CoverType[\"covering\"] = 0] = \"covering\";\n    CoverType[CoverType[\"coveredBy\"] = 1] = \"coveredBy\";\n})(CoverType || (exports.CoverType = CoverType = {}));\nclass OftState {\n    constructor(_selectedIndex = null, _selectedFilters = new Map(), _focusIndex = null, _unfocusedFilters = new Map(), _coverType = CoverType.covering) {\n        this._selectedIndex = _selectedIndex;\n        this._selectedFilters = _selectedFilters;\n        this._focusIndex = _focusIndex;\n        this._unfocusedFilters = _unfocusedFilters;\n        this._coverType = _coverType;\n    }\n    clone() {\n        return new OftState(this._selectedIndex, new Map(this._selectedFilters), this._focusIndex, new Map(this._unfocusedFilters), this._coverType);\n    }\n    copyFrom(other) {\n        this._selectedIndex = other._selectedIndex;\n        this._selectedFilters = new Map(other._selectedFilters);\n        this._focusIndex = other._focusIndex;\n        this._unfocusedFilters = new Map(other._unfocusedFilters);\n        this._coverType = other._coverType;\n    }\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._selectedIndex = value;\n    }\n    get selectedFilters() {\n        return this._selectedFilters;\n    }\n    set selectedFilters(value) {\n        this._selectedFilters = value;\n    }\n    get focusIndex() {\n        return this._focusIndex;\n    }\n    set focusIndex(value) {\n        this._focusIndex = value;\n    }\n    isFocused() {\n        return this._focusIndex != null;\n    }\n    isFocusSelected() {\n        return this._focusIndex != null && this.selectedIndex == null;\n    }\n    get unfocusedFilters() {\n        return this._unfocusedFilters;\n    }\n    set unfocusedFilters(value) {\n        this._unfocusedFilters = value;\n    }\n    get coverType() {\n        return this._coverType;\n    }\n    set coverType(value) {\n        this._coverType = value;\n    }\n} // OftState\nexports.OftState = OftState;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OftStateHistory = exports.HistoryItem = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst change_event_1 = require(\"@main/model/change_event\");\nconst log_1 = require(\"@main/utils/log\");\n/**\n * One entry in the {@lnik OftStateHistory}.\n */\nclass HistoryItem {\n    constructor(changeEvent) {\n        this.changeEvent = changeEvent;\n    }\n} // HistoryItem\nexports.HistoryItem = HistoryItem;\n/**\n * History of state changes of the OftState.\n */\nclass OftStateHistory {\n    /**\n     * Initialize the class with an initial history.\n     *\n     * If history is empty an initial state is added.\n     *\n     * @param history An initial history, newer states at the beginning.\n     * @param currentPosition position of the current state within the history\n     * @param maxSize maximum size of the history defaults to 500\n     */\n    constructor(history = [], currentPosition = 0, maxSize = 500) {\n        this.history = history;\n        this.currentPosition = currentPosition;\n        this.maxSize = maxSize;\n        this.log = new log_1.Log(\"OftStateHistory\");\n    }\n    /**\n     * Initializes the eventFactories.\n     *\n     * @param changeEvent The event that created the initial state of the history does not contain one\n     */\n    init(changeEvent) {\n        this.log.info(\"init length\", this.history.length, \"currentPosition\", this.currentPosition);\n        if (this.history.length == 0) {\n            this.log.info(\"Adding initial state\", changeEvent);\n            this.history.push(new HistoryItem(changeEvent));\n        }\n    }\n    length() {\n        return this.history.length;\n    }\n    /**\n     * Adds a new history index at the given position.\n     *\n     * @param changeEvent change that leads to the new state.\n     * @param position the position in this history where to place the event, defaulting to the last added\n     * @return the added {@link HistoryItem}\n     */\n    pushEvent(changeEvent, position = this.currentPosition) {\n        this.log.info(\"pushState position\", position, \"event\", changeEvent);\n        const historyItem = new HistoryItem(changeEvent);\n        this.history.splice(position, 0, historyItem);\n        this.currentPosition = this.limitHistorySize(position);\n        return changeEvent;\n    }\n    /**\n     * Pulls out a {@link ChangeEvent} from this history at the given position.\n     *\n     * @param position the position. default to the last added\n     * @return the pulled {@link ChangeEvent}\n     */\n    pullState(position = this.currentPosition) {\n        if (position < 0 || position + 1 >= this.history.length)\n            return null;\n        if (this.history.length == 1) {\n            this.currentPosition = 0;\n            return this.history[0].changeEvent;\n        }\n        else {\n            this.currentPosition = position;\n            return this.history.splice(position, 1)[0].changeEvent;\n        }\n    }\n    /**\n     * Peeks (not changing the history) the {@link ChangeEvent} at the given position in the history.\n     *\n     * @param position the position. default to the last added\n     * @return the {@link ChangeEvent} or null of position is out of range\n     */\n    peekState(position = this.currentPosition) {\n        return position >= 0 || position < this.history.length ? this.history[position].changeEvent : null;\n    }\n    /**\n     * switches the history to the previous (older) entry and returns a {@link ChangeEvent} representing the state change.\n     *\n     * @return {@link ChangeEvent} executing the state change or null if in the latest state\n     */\n    toPreviousState() {\n        if ((this.currentPosition + 1) >= this.history.length)\n            return null;\n        const fromEntry = this.history[this.currentPosition];\n        this.log.info(\"history\", this.history);\n        this.currentPosition++;\n        const toEntry = this.history[this.currentPosition];\n        const changeEvent = new change_event_1.ChangeEvent(fromEntry.changeEvent.types, toEntry.changeEvent.oftState);\n        this.log.info(\"toPreviousState position\", this.currentPosition, \"length\", this.history.length, \"event\", changeEvent);\n        return changeEvent;\n    }\n    /**\n     * switch the history to the next (newer) entry  and returns a {@link ChangeEvent} representing the state change.\n     *\n     * @return {@link ChangeEvent} executing the state change or null if in the latest state\n     */\n    toNextState() {\n        if (this.currentPosition < 1)\n            return null;\n        this.currentPosition--;\n        const changeEvent = this.history[this.currentPosition].changeEvent;\n        this.log.info(\"toNextState position\", this.currentPosition, \"history\", this.history.length, \"event\", changeEvent);\n        return changeEvent;\n    }\n    /**\n     * Keeps the history length to max size by depending in index either removing the first or the last element\n     * dependent on index being in the last or in the first halve of the history.\n     *\n     * @param index where a new element was added\n     * @return newIndex\n     */\n    limitHistorySize(index = this.currentPosition) {\n        if (this.history.length > this.maxSize) {\n            const removeFirst = index >= (this.maxSize / 2);\n            this.history.splice(removeFirst ? 0 : -1, 1);\n            if (removeFirst)\n                index--;\n        }\n        return index;\n    }\n} // OftStateHistory\nexports.OftStateHistory = OftStateHistory;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Project = exports.Field = void 0;\nconst specitems_1 = require(\"@main/model/specitems\");\nclass Field {\n    constructor(id, label, name, tooltip = \"\", color, item_count = -1) {\n        this.id = id;\n        this.label = label !== undefined ? label : id;\n        this.name = name !== undefined ? name : this.label;\n        this.tooltip = tooltip;\n        this.color = color;\n        this.item_count = item_count;\n    }\n    copyFromSameId(model) {\n        if (model != undefined && model.id === this.id) {\n            if (model.label != undefined && model.label != model.id)\n                this.label = model.label;\n            if (model.name != undefined && model.name != model.id)\n                this.name = model.name;\n            if (this.name == undefined || this.name == this.id)\n                this.name = this.label;\n            if (model.tooltip != \"\")\n                this.tooltip = model.tooltip;\n            if (model.color != undefined)\n                this.color = model.color;\n            if (model.item_count >= 0)\n                this.item_count = model.item_count;\n        }\n        return this;\n    }\n} // FieldModel\nexports.Field = Field;\nclass Project {\n    constructor(projectName, types, typedFieldNames, tags, tagFieldNames, statusNames, statusFieldNames, itemCount, itemCovered, itemUncovered, fieldCounts, configurations) {\n        this.projectName = projectName;\n        this.types = types;\n        this.typedFieldNames = typedFieldNames;\n        this.tags = tags;\n        this.tagFieldNames = tagFieldNames;\n        this.statusNames = statusNames;\n        this.statusFieldNames = statusFieldNames;\n        this.itemCount = itemCount;\n        this.itemCovered = itemCovered;\n        this.itemUncovered = itemUncovered;\n        this.fieldCounts = fieldCounts;\n        this.fieldModels = new Map();\n        this.typeCount = new Array();\n        this.uncoveredCount = new Array();\n        this.statusCount = new Array();\n        this.tagCount = new Array();\n        const fieldConfigurations = new Map(Object.entries(configurations));\n        Project.generateFieldModels(typedFieldNames, types, fieldConfigurations, fieldCounts).forEach((value, key) => this.fieldModels.set(key, value));\n        Project.generateFieldModels(tagFieldNames, tags, fieldConfigurations, fieldCounts).forEach((value, key) => this.fieldModels.set(key, value));\n        Project.generateFieldModels(statusFieldNames, statusNames, fieldConfigurations, fieldCounts).forEach((value, key) => this.fieldModels.set(key, value));\n    }\n    getTypeFieldModel() {\n        return this.getFieldModel(specitems_1.TYPE_FIELD_NAME);\n    }\n    hasField(name) {\n        return this.fieldModels.has(name);\n    }\n    getFieldModel(name) {\n        return this.fieldModels.has(name) ? this.fieldModels.get(name) : Array.of();\n    }\n    //\n    // private members\n    /**\n     * Generates the models used e.g. for test selection lists.\n     *\n     * Models are only generated based on fieldNames only if configurations know the field name.\n     *\n     * @param fieldNames possible field names like type, status, tags\n     * @param fieldIds identifier names of field entries\n     * @param configurations meta_data.js metamodel for the project field models\n     * @param fieldCounts the number of items for each field\n     */\n    static generateFieldModels(fieldNames, fieldIds, configurations, fieldCounts) {\n        return new Map(fieldNames\n            .filter((name) => configurations.has(name))\n            .map((name) => [name, Project.createFieldModels(fieldIds, configurations.get(name), fieldCounts.get(name))]));\n    }\n    /**\n     * Generates the field models for one fieldName (e.g. type, status or tags).\n     *\n     * @param fieldIds The ids of all entries in a fieldModel provided by meta_data.js\n     * @param fieldConfiguration The meta_data.js content\n     * @param fieldCounts The number of items for each field\n     */\n    static createFieldModels(fieldIds, fieldConfiguration, fieldCounts) {\n        const namedFieldConfiguration = fieldConfiguration != undefined\n            ? new Map(fieldConfiguration.map((item) => [item.id, item]))\n            : new Map();\n        return fieldIds.map((fieldId) => {\n            const idIndex = fieldIds.indexOf(fieldId);\n            const count = (fieldCounts != undefined && fieldCounts.length > idIndex) ? fieldCounts[idIndex] : -1;\n            return Project.createFieldModel(fieldId, namedFieldConfiguration.get(fieldId), count);\n        });\n    }\n    /**\n     * Generates on entry of a field set identified by a field name.\n     *\n     * @param id The Id of the field\n     * @param configuration the model of the field read out of meta_data.js\n     * @param count the number of this entry or -1 if not available\n     */\n    static createFieldModel(id, configuration, count) {\n        const field = new Field(id).copyFromSameId(configuration);\n        if (count >= 0)\n            field.item_count = count;\n        return field;\n    }\n} // Project\nexports.Project = Project;\n","\"use strict\";\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STATUS_ACCEPTED_INDEX = exports.STATUS_FIELD_NAMES = exports.TAG_FIELD_NAMES = exports.TYPED_FIELD_NAMES = exports.TYPE_FIELD_NAME = void 0;\nexports.TYPE_FIELD_NAME = \"type\";\nexports.TYPED_FIELD_NAMES = [exports.TYPE_FIELD_NAME, \"provides\", \"needs\", \"covered\", \"uncovered\", \"covering\", \"coveredBy\", \"depends\"];\nexports.TAG_FIELD_NAMES = [\"tags\"];\nexports.STATUS_FIELD_NAMES = [\"status\"];\nexports.STATUS_ACCEPTED_INDEX = 0;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deferred = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\n/**\n * Allows to start a handler deferred.\n *\n * If the same {@link run} method is called again the previous request is canceled first.\n */\nclass Deferred {\n    constructor(timeOut) {\n        this.timeOut = timeOut;\n        this.timer = null;\n    }\n    run(handler) {\n        this.cancel();\n        this.timer = setTimeout(() => {\n            handler();\n            this.cancel();\n        }, this.timeOut);\n    }\n    cancel() {\n        if (this.timer != null)\n            clearTimeout(this.timer);\n    }\n} // Deferred\nexports.Deferred = Deferred;\n","\"use strict\";\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pushTo = pushTo;\nexports.sameArrayValues = sameArrayValues;\nexports.enumNames = enumNames;\nexports.enumIds = enumIds;\n/**\n * Add an entry to a possible undefined array.\n *\n * @param array The possible undefined array\n * @param entry The item to add\n */\nfunction pushTo(array, entry) {\n    array = array !== null && array !== void 0 ? array : [];\n    array.push(entry);\n    return array;\n}\n/**\n * Returns true if two arrays have the same values independent of the order of the entries.\n *\n * @param a First array\n * @param b Second array\n */\nfunction sameArrayValues(a, b) {\n    const setA = new Set(a);\n    const setB = new Set(b);\n    return a.length == b.length && [...setA].every(value => setB.has(value));\n}\n/**\n *\n * @param enumType an enum type\n * @return Array of strings of the names of the enum entries\n */\nfunction enumNames(enumType) {\n    return Object.values(enumType).filter(name => typeof name === \"string\");\n}\n/**\n * @param enumType an enum type\n * @return Array of number ids of the enum entries\n */\nfunction enumIds(enumType) {\n    return Object.keys(enumType).filter(key => !isNaN(Number(key))).map((entry) => Number(entry));\n}\n","\"use strict\";\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.Log = void 0;\nexports.hideLogTags = hideLogTags;\nexports.showLogTags = showLogTags;\nexports.hiddenLogTags = hiddenLogTags;\nexports.knownLogTags = knownLogTags;\nexports.resetLogTags = resetLogTags;\n/**\n * A Logger used by this application to log messages to the console for debugging.\n */\nclass Log {\n    /**\n    * @param tag identifies the source of a log message and allows filter log message. Defaults to \"\" for no source.\n     */\n    constructor(tag = \"\") {\n        this.tag = tag;\n        if (tag != \"\") {\n            _allLogTags = _allLogTags.add(tag);\n        }\n    }\n    /**\n     * Logs an info message.\n     *\n     * Prepends the message with the tag of the logger if set\n     *\n     * @param message List of message strings to log\n     */\n    info(...message) {\n        if (process.env.NODE_ENV === 'development') {\n            if (this.tag == \"\" || (_allLogTags.has(this.tag) && !_hiddenLogTags.has(this.tag))) {\n                if (this.tag) {\n                    console.log(...[\"|\", this.tag, \"|\"].concat(message));\n                }\n                else {\n                    console.log(...message);\n                }\n            }\n        }\n    }\n} // Log\nexports.Log = Log;\n/**\n * Default logger without a tag\n */\nexports.log = new Log();\nlet _hiddenLogTags = new Set();\nlet _allLogTags = new Set();\n/**\n * Allows to filter log messages by tags.\n *\n * @param tags tags to exclude. If empty all tags are filtered out\n */\nfunction hideLogTags(...tags) {\n    if (tags.length == 0) {\n        _hiddenLogTags = new Set(_allLogTags);\n    }\n    else {\n        tags.forEach((tag) => _hiddenLogTags.add(tag));\n    }\n}\n/**\n * Enable log tags to be shown.\n *\n * @param tags The tags to show, if empty show all messages\n */\nfunction showLogTags(...tags) {\n    if (tags.length == 0) {\n        _hiddenLogTags.clear();\n    }\n    else {\n        tags.forEach((tag) => _hiddenLogTags.delete(tag));\n    }\n}\n/**\n * Show tags of messages that are suppressed.\n */\nfunction hiddenLogTags() {\n    return Array.from(_hiddenLogTags).sort();\n}\n/**\n * Show all known tags.\n */\nfunction knownLogTags() {\n    return Array.from(_allLogTags).sort();\n}\nfunction resetLogTags() {\n    _allLogTags.clear();\n    _hiddenLogTags.clear();\n}\n/* Coverage ignore start */\nif (process.env.NODE_ENV === 'development') {\n    /**\n     * Provide the logger commands to the console.\n     */\n    (function (window) {\n        window.log = {};\n        window.log.show = showLogTags;\n        window.log.hide = hideLogTags;\n        window.log.hidden = hiddenLogTags;\n        window.log.all = knownLogTags;\n    })(window);\n}\n/* Coverage ignore end */ \n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ButtonElement = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst log_1 = require(\"@main/utils/log\");\nconst CLASS_ACTIVATOR = \"nav-btn-activator\";\nconst CLASS_TOGGLER = \"nav-btn-toggler\";\nconst CLASS_ON = \"nav-btn-on\";\nvar ButtonType;\n(function (ButtonType) {\n    ButtonType[ButtonType[\"PRESS\"] = 0] = \"PRESS\";\n    ButtonType[ButtonType[\"ACTIVATOR\"] = 1] = \"ACTIVATOR\";\n    ButtonType[ButtonType[\"TOGGLER\"] = 2] = \"TOGGLER\";\n})(ButtonType || (ButtonType = {}));\nclass ButtonElement {\n    constructor(buttonElement, changeListener) {\n        this.buttonElement = buttonElement;\n        this.changeListener = changeListener;\n        this.log = new log_1.Log(\"ButtonElement\");\n        if (buttonElement.hasClass(CLASS_TOGGLER)) {\n            this.buttonType = ButtonType.TOGGLER;\n            this._isOn = buttonElement.hasClass(CLASS_ON);\n        }\n        else if (buttonElement.hasClass(CLASS_ACTIVATOR)) {\n            this.buttonType = ButtonType.ACTIVATOR;\n            this._isOn = buttonElement.hasClass(CLASS_ON);\n        }\n        else {\n            this.buttonType = ButtonType.PRESS;\n            this._isOn = false;\n        }\n        this.log.info(\"ButtonType\", this.buttonType);\n    }\n    init() {\n        return this;\n    }\n    activate() {\n        this.buttonElement.on('click', () => {\n            if (this.canToggleOnClick()) {\n                this.toggle();\n                this.changeListener(this._isOn);\n            }\n            else if (this.canClicked()) {\n                this.changeListener(true);\n            }\n        });\n        this.buttonElement.prop('disabled', false);\n    }\n    deactivate() {\n        this.buttonElement.off('click');\n        this.buttonElement.prop('disabled', true);\n    }\n    get isOn() {\n        return this._isOn;\n    }\n    toggle(on = this._isOn) {\n        if (this.buttonType === ButtonType.PRESS)\n            return false;\n        if (this._isOn === on)\n            return on;\n        this._isOn = on;\n        this.log.info(\"Toggling to\", this._isOn);\n        if (this._isOn) {\n            this.buttonElement.addClass(CLASS_ON);\n        }\n        else {\n            this.buttonElement.removeClass(CLASS_ON);\n        }\n        return this._isOn;\n    }\n    canToggleOnClick() {\n        return this.buttonType === ButtonType.TOGGLER ? true\n            : this.buttonType === ButtonType.ACTIVATOR && !this._isOn;\n    }\n    canClicked() {\n        return this.buttonType === ButtonType.PRESS;\n    }\n} // ButtonElement\nexports.ButtonElement = ButtonElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailsElement = exports.DetailsElementFactory = void 0;\nconst specitems_1 = require(\"@main/model/specitems\");\nconst log_1 = require(\"@main/utils/log\");\nconst change_event_1 = require(\"@main/model/change_event\");\nconst SPECITEM_ID_CLASS = \".specitem-id\";\nconst DETAILS_TABLE_ID = \"#details-table\";\nconst DETAILS_STATUS_ID = \"#details-status\";\nconst DETAILS_NEEDS_ID = \"#details-needs\";\nconst DETAILS_COVERS_ID = \"#details-covers\";\nconst DETAILS_TAGS_ID = \"#details-tags\";\nconst DETAILS_SOURCE_ID = \"#details-source\";\nconst DETAILS_COMMENTS_ID = \"#details-comments\";\nconst DETAILS_DEPENDENCIES_ID = \"#details-dependencies\";\nconst ALL_TABLE_IDS = Array.of(DETAILS_STATUS_ID, DETAILS_NEEDS_ID, DETAILS_COVERS_ID, DETAILS_TAGS_ID, DETAILS_SOURCE_ID, DETAILS_COMMENTS_ID, DETAILS_DEPENDENCIES_ID);\nclass DetailsElementFactory {\n    build(specItems, project, oftState) {\n        return new DetailsElement(specItems, project, oftState);\n    }\n} // DetailsElementFactory\nexports.DetailsElementFactory = DetailsElementFactory;\nclass DetailsElement {\n    constructor(specItems, project, oftState) {\n        this.specItems = specItems;\n        this.project = project;\n        this.oftState = oftState;\n        this.log = new log_1.Log(\"DetailsElement\");\n        this.changeListener = (event) => {\n            event.handleSelectionChange((selectedIndex, oftState) => this.selectionChangeListener(selectedIndex, oftState));\n        };\n        this.tableElement = $(DETAILS_TABLE_ID);\n    }\n    init() {\n        this.deactivate();\n        return this;\n    }\n    activate() {\n        this.tableElement.removeAttr(\"disabled\");\n        this.oftState.addChangeListener(this.changeListener, change_event_1.EventType.Focus, change_event_1.EventType.Selection);\n    }\n    deactivate() {\n        this.oftState.removeChangeListener(this.changeListener);\n        this.tableElement.attr(\"disabled\", \"disabled\");\n        this.clearTable();\n    }\n    isActive() {\n        return this.tableElement.attr(\"disabled\") != undefined;\n    }\n    //\n    // Private members\n    updateTable(specItem) {\n        if (specItem == null) {\n            this.log.info(\"Clearing description\");\n            this.clearTable();\n            return;\n        }\n        this.log.info(\"Updating description for\", specItem.index);\n        $(SPECITEM_ID_CLASS).text(this.createNavHeaderLabel(specItem));\n        $(DETAILS_STATUS_ID).text(this.createStatusValue(specItem));\n        $(DETAILS_NEEDS_ID).text(this.createTypesValue(specItem.needs));\n        $(DETAILS_COVERS_ID).text(this.createTypesValue(specItem.provides));\n        $(DETAILS_TAGS_ID).text(this.createTagsValue(specItem));\n        $(DETAILS_SOURCE_ID).html(this.createSourceValue(specItem));\n        $(DETAILS_COMMENTS_ID).html(this.createCommentsValue(specItem));\n        this.replaceHyperlinkedSpecItems($(DETAILS_DEPENDENCIES_ID), specItem.depends);\n    }\n    clearTable() {\n        $(SPECITEM_ID_CLASS).html(\"\");\n        ALL_TABLE_IDS.forEach((tableID) => $(tableID).html(\"\"));\n    }\n    createNavHeaderLabel(specItem) {\n        return specItem.title != specItem.name ?\n            `#${specItem.index} ${specItem.title} [${specItem.id}]` :\n            `#${specItem.index} [${specItem.id}]`;\n    }\n    createStatusValue(specItem) {\n        const statusName = this.project.getFieldModel(specitems_1.STATUS_FIELD_NAMES[0])[specItem.status].name;\n        return statusName != undefined ? statusName : \"\";\n    }\n    createTypesValue(types) {\n        const typeItems = this.project.getTypeFieldModel();\n        return types.map((index) => typeItems[index].label).join(\", \");\n    }\n    createTagsValue(specItem) {\n        const tagFields = this.project.getFieldModel(specitems_1.TAG_FIELD_NAMES[0]);\n        return specItem.tags.map((index) => tagFields[index].name).join(\", \");\n    }\n    createSourceValue(specItem) {\n        return `<a href=\"file://${specItem.sourceFile}\">${specItem.sourceFile}</a>, Line ${specItem.sourceLine}`;\n    }\n    createCommentsValue(specItem) {\n        return specItem.comments;\n    }\n    replaceHyperlinkedSpecItems(dependenciesElement, specItemIndexes) {\n        dependenciesElement.find(\"a._specitem-hyperlink\").off(\"click\");\n        dependenciesElement.html(specItemIndexes.map((index) => `[<a class=\"_specitem-hyperlink\" href=\"${index}\">${this.specItems[index].title}</a>]`).join(\", \"));\n        this.addHyperlinkClickEvent(dependenciesElement);\n    }\n    addHyperlinkClickEvent(containerElement) {\n        this.log.info(\"set hyperlink\", $(\"a._specitem-hyperlink\"));\n        containerElement.find(\"a._specitem-hyperlink\").on(\"click\", (event) => {\n            event.preventDefault();\n            const url = event.target.getAttribute(\"href\");\n            if (url) {\n                this.log.info(\"HYPERLINK\", url);\n                const index = Number.parseInt(url);\n                this.oftState.selectAndShowItem(index);\n            }\n        });\n    }\n    selectionChangeListener(selectedIndex, oftState) {\n        this.log.info(\"selectionChangeListener index\", selectedIndex, \"focus\", oftState.focusIndex);\n        const newIndex = selectedIndex != null ? selectedIndex : oftState.focusIndex;\n        this.updateTable(newIndex != null ? this.specItems[newIndex] : null);\n    }\n} // DetailsElement\nexports.DetailsElement = DetailsElement;\n","\"use strict\";\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExpandableElements = void 0;\n/**\n *\n * Titled container element that can be collapsed.\n *\n * The element itself needs to be a <div> with class \"expandable\", The title of the element\n * is set by the attribute \"data-type\", a tooltip by the attribute \"data-tooltip\".\n */\nclass ExpandableElements {\n    init() {\n        $('.expandable').each((_, element) => {\n            const expandableWidget = $(element);\n            const title = expandableWidget.data('title');\n            expandableWidget.wrapInner('<div class=\"_expandable-content visible\"></div>');\n            expandableWidget.prepend(`<div class=\"_expandable-header\"><span>${title}</span></div>`);\n            const toggleControl = expandableWidget.find(\"._expandable-header > span\");\n            toggleControl.on(\"click\", () => this.toggleExpansion(expandableWidget));\n        });\n    }\n    toggleExpansion(expandableWidget) {\n        expandableWidget.children().first().toggleClass(\"collapsed\");\n        $(expandableWidget.children()[1]).toggleClass(\"visible\");\n    }\n} // ExpandableElements\nexports.ExpandableElements = ExpandableElements;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterElement = exports.FilterElementFactory = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst log_1 = require(\"@main/utils/log\");\nconst collections_1 = require(\"@main/utils/collections\");\nconst filter_1 = require(\"@main/model/filter\");\nconst navbar_element_1 = require(\"@main/view/navbar_element\");\nconst change_event_1 = require(\"@main/model/change_event\");\nclass FilterElementFactory {\n    build(id, selectElement, filterModel, oftState) {\n        return new FilterElement(id, selectElement, filterModel, oftState);\n    }\n}\nexports.FilterElementFactory = FilterElementFactory;\n/**\n *  FilterElement provide one of the filter list in a side drawer.\n *\n *  The filter is configured by a {@link IField} that is part of the global metadata.\n *\n *  State changes are communicated via the {@link OftStateController}. The FilterElement issues changes to the filter\n *  selection via {@link OftStateController.selectFilters}. By listening to filter change events\n *  it reacts to changes to the filters issued by other components.\n */\nclass FilterElement {\n    constructor(id, selectElement, filterModel, oftState) {\n        this.id = id;\n        this.filterModel = filterModel;\n        this.oftState = oftState;\n        /**\n         * selected options, gets updated when option is selected via the UI or via the oftState sending a filterChange event.\n         */\n        this.selectionIndexes = [];\n        this.navbarElement = undefined;\n        this.log = new log_1.Log(\"FilterElement\");\n        this.filtersChangeListener = (event) => {\n            event.handleFilterChange((filters, _) => this.filtersChanged(filters));\n        };\n        this.selectElement = $(selectElement);\n    }\n    /**\n     * Builds the filter UI.\n     */\n    init() {\n        this.selectElement.attr('multiple', \"true\");\n        this.addAllNoneSelector();\n        this.appendFilterValues();\n        this.deactivate();\n        return this;\n    }\n    /**\n     * Enable the filter element, ready to be used in the UI.\n     */\n    activate() {\n        var _a;\n        this.selectElement.removeAttr(\"disabled\");\n        this.selectElement.on('change', () => this.notifySelectionChanged(this.selectElement));\n        this.oftState.addChangeListener(this.filtersChangeListener, change_event_1.EventType.Filters);\n        (_a = this.navbarElement) === null || _a === void 0 ? void 0 : _a.activate();\n    }\n    /**\n     * Deactivates the filter element, making it unavailable in the UI.\n     */\n    deactivate() {\n        var _a;\n        (_a = this.navbarElement) === null || _a === void 0 ? void 0 : _a.deactivate();\n        this.selectElement.attr(\"disabled\", \"disabled\");\n        this.selectElement.off('change');\n        this.oftState.removeChangeListener(this.filtersChangeListener);\n    }\n    /**\n     * Query of the UI is active.\n     */\n    isActive() {\n        return this.selectElement.attr(\"disabled\") != undefined;\n    }\n    //\n    // Private members\n    // Init UI\n    /**\n     * Imports option view for a filter element from the global filter_config variable.\n     */\n    appendFilterValues() {\n        this.selectElement.prop(\"size\", this.filterModel.length);\n        this.filterModel.forEach((item, index) => {\n            const color = item.color ? `style=\"color:${item.color}\"` : '';\n            const count = item.item_count >= 0 ? `&nbsp;&nbsp;(${item.item_count})` : '';\n            const id = FilterElement.toSelectionId(this.id, index);\n            this.selectElement.append(`<option id=\"${id}\" ${color}>${item.name}${count}</option>`);\n        });\n        this.toggleOff(true);\n    }\n    /**\n     * Add a select all and a select off button above a select element.\n     */\n    addAllNoneSelector() {\n        const buttonBar = this.selectElement.parent().parent().find(\"._expandable-header\");\n        buttonBar.append(`\n            <div class=\"nav-bar _filter-nav-bar\">\n                <a id=\"${this.id}-btn-all\" class=\"nav-btn _img-filter-all\" href=\"#\" ></a>\n                <a id=\"${this.id}-btn-off\" class=\"nav-btn nav-btn-activator _img-filter-off nav-btn-on\" href=\"#\"></a>\n            </div>\n        `);\n        this.navbarElement = new navbar_element_1.NavbarElement(buttonBar);\n        this.navbarElement.setChangeListener(`${this.id}-btn-all`, () => this.selectAll());\n        this.navbarElement.setChangeListener(`${this.id}-btn-off`, () => this.selectOff());\n        this.navbarElement.init();\n    }\n    // UI Event Handler\n    /**\n     * Select or deselect all options within a element.\n     */\n    selectAll() {\n        this.selectElement.children(\"option\").each((_, element) => {\n            $(element).prop(\"selected\", true);\n        });\n        this.selectElement.trigger(\"change\");\n    }\n    /**\n     * Sets all items unselected and shows the items of disabled.\n     */\n    selectOff() {\n        this.selectElement.children(\"option\").each((_, element) => {\n            $(element).prop(\"selected\", false);\n        });\n        this.selectElement.trigger(\"change\");\n    }\n    /**\n     * Listener that reports changed selection to oftState.\n     *\n     * @param {JQuery} selectElement th select element\n     */\n    notifySelectionChanged(selectElement) {\n        this.log.info(\"selectionChanged\", this.id, \" \", this.toSelectionIndexes(selectElement));\n        const filters = new Map([[this.id, new filter_1.SelectionFilter(this.id, this.toSelectionIndexes(selectElement))]]);\n        this.oftState.selectFilters(filters);\n    }\n    /**\n     * Extracts the selected indexes from a select option elements.\n     *\n     * @param {JQuery} selectElement th select element of the options\n     */\n    toSelectionIndexes(selectElement) {\n        return selectElement\n            .find('option:selected')\n            .map((_, option) => FilterElement.toSelectionIndex(option)).toArray();\n    }\n    /**\n     * Generates an element id for on option based in the id (index) of the filter entry.\n     *\n     * @param id of the filter\n     * @param index index of the filter entry\n     */\n    static toSelectionId(id, index) {\n        return `${id}_${index}`;\n    }\n    /**\n     * Extracts the index out of the id of an option element\n     *\n     * @param element the option element\n     */\n    static toSelectionIndex(element) {\n        return parseInt(element.id.replace(/^[A-Za-z0-9]+_/, ''));\n    }\n    // State change handling\n    /**\n     * Called when the filters changed their selection.\n     *\n     * All specItems matching the filters are made visible, all non matching are made invisible.\n     *\n     * @param selectedFilters filters to be selected (includes the selection of all filters not only this one)\n     */\n    filtersChanged(selectedFilters) {\n        this.log.info(\"filtersChanged index=\", this.id, \"filters\", selectedFilters);\n        const changedSelectionIndexes = this.getSelectionIndexes(selectedFilters.get(this.id));\n        this.setSelections(changedSelectionIndexes);\n    }\n    /**\n     * Adapt the UI based on the selected indexes.\n     *\n     * Called when receiving a filterChangeEvent or a focusChangeEvent.\n     *\n     * @param {Array<number>} changedIndexed List of selected entry indexes\n     */\n    setSelections(changedIndexed) {\n        this.log.info(\"setSelections for\", this.id, \"changedIndexes\", changedIndexed, \"hasChanges\", (0, collections_1.sameArrayValues)(this.selectionIndexes, changedIndexed));\n        // Prevent OftState events received by change to the UI\n        if ((0, collections_1.sameArrayValues)(this.selectionIndexes, changedIndexed))\n            return;\n        this.selectionIndexes = changedIndexed;\n        this.selectElement.children(\"option\").each((index, element) => {\n            $(element).prop(\"selected\", changedIndexed.includes(index));\n        });\n        this.toggleOff(changedIndexed.length == 0);\n    }\n    /**\n     * Toggles of the items are shown as being off or not.\n     *\n     * @param off true to set the items off\n     */\n    toggleOff(off) {\n        var _a, _b;\n        this.selectElement.children(\"option\").each((_, element) => {\n            if (off) {\n                $(element).addClass(\"_filter-item-off\");\n            }\n            else {\n                $(element).removeClass(\"_filter-item-off\");\n            }\n        });\n        (_b = (_a = this.navbarElement) === null || _a === void 0 ? void 0 : _a.getButton(`${this.id}-btn-off`)) === null || _b === void 0 ? void 0 : _b.toggle(off);\n    }\n    getSelectionIndexes(filter) {\n        if (filter == undefined || !(filter instanceof filter_1.SelectionFilter))\n            return [];\n        return filter.filterIndexes;\n    }\n} // FilterElement\nexports.FilterElement = FilterElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FiltersElement = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst filter_element_1 = require(\"./filter_element\");\n/**\n * Populates the Filter UI with the corresponding filter elements based on the {@link FieldConfigurations}.\n */\nclass FiltersElement {\n    constructor(filterModels, oftState, filterElementFactory = new filter_element_1.FilterElementFactory()) {\n        this.filterModels = filterModels;\n        this.oftState = oftState;\n        this.filterElementFactory = filterElementFactory;\n    }\n    /**\n     * Initialize all filter widget marked with class .filter.\n     */\n    init() {\n        $(\".filter\").each((_, element) => {\n            var _a;\n            let id = (_a = element === null || element === void 0 ? void 0 : element.id) !== null && _a !== void 0 ? _a : \"\";\n            const filterElement = this.filterElementFactory.build(id ? id : \"\", element, this.filterModels.get(id), this.oftState);\n            filterElement.init().activate();\n        });\n    }\n} // FiltersElement\nexports.FiltersElement = FiltersElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FocusSpecItemElement = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst spec_item_element_1 = require(\"@main/view/spec_item_element\");\nconst oft_state_1 = require(\"@main/model/oft_state\");\nconst log_1 = require(\"@main/utils/log\");\nconst COVERING_TEXT = \"<<<<  is covering    <<<<\";\nconst IS_COVERED_BY_TEXT = \">>>>  is covered by  >>>>\";\nclass FocusSpecItemElement extends spec_item_element_1.SpecItemElement {\n    constructor(specItem, coverType, oftStateController, project) {\n        super(specItem, oftStateController, project);\n        this.coverType = coverType;\n        this.log = new log_1.Log(\"FocusSpecItemElement\");\n        this.log.info(\"new FocusSpecItemElement\");\n    }\n    /**\n     * Sets the coverType to show.\n     *\n     * @param coverType the new coverType\n     */\n    cover(coverType) {\n        this.log.info(\"cover index\", this.specItem.index);\n        this.updateCoverTypeElement(coverType);\n    }\n    //\n    // private members\n    /**\n     * UnFocus this item and with that hide focus item.\n     */\n    notifyFocus(_) {\n        this.log.info(\"notifyFocus unfocus index\", this.specItem.index);\n        this.oftStateController.unFocusItem(this.specItem.index);\n    }\n    /**\n     * If focus item is already selected the cover type is switched via {@link notifySwitchCoverType}.\n     */\n    notifySelection() {\n        if (!this.isActive())\n            return false;\n        return this.notifySwitchCoverType() ? true : super.notifySelection();\n    }\n    /**\n     * Switch the coverType of this item and in case item is already selected.\n     */\n    notifySwitchCoverType() {\n        if (this.parentElement == null)\n            return false;\n        if (!this.selected)\n            return false;\n        const coverType = (() => {\n            switch (this.coverType) {\n                case oft_state_1.CoverType.covering:\n                    return oft_state_1.CoverType.coveredBy;\n                case oft_state_1.CoverType.coveredBy:\n                    return oft_state_1.CoverType.covering;\n                default:\n                    throw new Error(`Unknown coverType: ${this.coverType}`);\n            }\n        })();\n        this.log.info(\"switchCoverType coverType to \", coverType);\n        super.notifyFocus(coverType);\n        return true;\n    }\n    //\n    // UI Templates\n    createTemplate() {\n        const coverageTemplate = this.createCoverageTemplate();\n        const draft = this.createDraftTemplate();\n        const coverType = this.createCoverTypeTemplate();\n        const template = $(`\n            <div class=\"specitem _focuspecitem\" id=\"${this.elementId}\">\n                <div style=\"position:relative\">    \n                    <div class=\"_specitem-pin _img-button-unpin\">\n                    </div>\n                    <div class=\"_specitem-header\">\n                        <div class=\"_specitem-name\">[${this.typeLabel}:${this.specItem.title}${this.specItem.version > 1 ? \":\" + this.specItem.version : \"\"}]</div>${draft}\n                        <div class=\"_specitem-status\">${coverageTemplate}</div>                    \n                    </div>\n                    <div class=\"_specitem-body\">\n                        ${this.specItem.content}                \n                    </div>\n                </div>                \n                ${coverType}\n            </div>             \n        `);\n        return this.addListenersToTemplate(template);\n    }\n    createCoverTypeTemplate() {\n        if (this.coverType == oft_state_1.CoverType.covering) {\n            return `<div class=\"_specitem-cover-type\">${COVERING_TEXT}</div>`;\n        }\n        else {\n            return `<div class=\"_specitem-cover-type\">${IS_COVERED_BY_TEXT}</div>`;\n        }\n    }\n    updateCoverTypeElement(coverType) {\n        this.log.info(\"updateCoverTypeElement index\", this.specItem.index, \"coverType\", coverType, \"changed\", coverType != this.coverType);\n        if (coverType == this.coverType)\n            return;\n        this.coverType = coverType;\n        this.element.find(\"._specitem-cover-type\").html(this.coverType == oft_state_1.CoverType.covering ? COVERING_TEXT : IS_COVERED_BY_TEXT);\n    }\n} // FocusSpecItemElement\nexports.FocusSpecItemElement = FocusSpecItemElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NavbarElement = void 0;\n/*\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nconst log_1 = require(\"@main/utils/log\");\nconst button_element_1 = require(\"@main/view/button_element\");\nclass NavbarElement {\n    constructor(element) {\n        this.element = element;\n        this.buttons = new Map();\n        this.changeListeners = new Map();\n        this._isActive = false;\n        this.log = new log_1.Log(\"Navbar_element\");\n        this.log.info(\"NavbarElement for \", element);\n        this.navbarElement = this.element.hasClass('nav-bar') ? this.element : this.element.find('.nav-bar');\n    }\n    init() {\n        this.log.info(\"init\");\n        this.navbarElement.find('.nav-btn').each((index, element) => {\n            const buttonElement = $(element);\n            const id = element.id !== \"\" ? element.id : `${index}`;\n            this.log.info(\"ButtonElement.id\", id);\n            const button = new button_element_1.ButtonElement(buttonElement, (state) => this.notifyChange(id, state));\n            this.buttons.set(id, button);\n            button.init();\n        });\n        return this;\n    }\n    activate() {\n        this._isActive = true;\n        this.buttons.forEach((button) => button.activate());\n        this.navbarElement.prop('disabled', false);\n    }\n    deactivate() {\n        this.navbarElement.prop('disabled', true);\n        this.buttons.forEach((button) => button.deactivate());\n        this._isActive = false;\n    }\n    isActive() {\n        return this._isActive;\n    }\n    setChangeListener(id, changeListener) {\n        this.log.info(`Set change listener for ${id} ${this.buttons.has(id)}`);\n        this.changeListeners.set(id, changeListener);\n    }\n    unsetChangeListener(id) {\n        this.changeListeners.delete(id);\n    }\n    getButton(id) {\n        return this.buttons.get(id);\n    }\n    //\n    // Private methods\n    notifyChange(id, state) {\n        this.log.info(`Notify change for ${id} with state ${state}`);\n        if (!this.isActive)\n            return;\n        const changeListener = this.changeListeners.get(id);\n        if (changeListener !== undefined) {\n            changeListener(id, state);\n        }\n    }\n} // NavbarElement\nexports.NavbarElement = NavbarElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SearchElement = void 0;\nconst log_1 = require(\"@main/utils/log\");\nconst filter_1 = require(\"@main/model/filter\");\nconst change_event_1 = require(\"@main/model/change_event\");\nconst async_1 = require(\"@main/utils/async\");\nclass SearchElement {\n    constructor(oftState) {\n        this.oftState = oftState;\n        this.log = new log_1.Log(\"SearchFromElement\");\n        this.inputLabel = \"use '+' for content\";\n        this.formElement = null;\n        this.inputElement = null;\n        this.filterOrFocusChangeListener = (event) => {\n            this.log.info(\"filterOrFocusChangeListener\", event.oftState);\n            event.handleFilterChange((filters, _) => this.filterChanged(filters));\n        };\n    }\n    init() {\n        this.log.info(\"init\");\n        this.addSearchForm();\n        this.deactivate();\n        return this;\n    }\n    /**\n     * Enable the search element, ready to be used in the UI.\n     */\n    activate() {\n        this.log.info(\"activate\");\n        this.oftState.addChangeListener(this.filterOrFocusChangeListener, change_event_1.EventType.Filters); // Also covers focus Change\n        if (this.inputElement != null)\n            this.inputElement.disabled = false;\n    }\n    /**\n     * Deactivates the search element, making it unavailable in the UI.\n     */\n    deactivate() {\n        this.log.info(\"deactivate\");\n        if (this.inputElement != null)\n            this.inputElement.disabled = true;\n        this.oftState.removeChangeListener(this.filterOrFocusChangeListener);\n    }\n    //\n    // private members\n    addSearchForm() {\n        const searchForm = $(\"#search\");\n        this.formElement = searchForm[0];\n        searchForm.append(`\n            <form class=\"_search\">\n                <input class=\"_search-input\" type=\"text\" placeholder=\"${this.inputLabel}\">\n                <button class=\"_search-clear\" type=\"submit\"></button>\n            </form>\n        `);\n        const input = searchForm.find(\"form input[type='text']\");\n        this.inputElement = input[0];\n        const deferred = new async_1.Deferred(300);\n        input.on('keyup', (event) => {\n            event.preventDefault();\n            deferred.run(() => this.notifyInputChanged(event.target.value));\n        });\n        const clear = searchForm.find(\"form button._search-clear\");\n        clear.on('click', (event) => {\n            event.preventDefault();\n            this.notifyInputChanged(\"\");\n        });\n    }\n    notifyInputChanged(value) {\n        let regEx = false;\n        let target = filter_1.NameFilterTarget.name;\n        if (value.startsWith(\"+\")) {\n            value = value.substring(5).trimStart();\n            target = filter_1.NameFilterTarget.content;\n        }\n        if (!value.match(/^[a-zA-Z0-9_-]*$/)) {\n            regEx = true;\n        }\n        this.log.info(\"notifyInputChanged value\", value, \"regEx\", regEx, \"target\", target);\n        const filters = new Map([[filter_1.NameFilter.FILTER_NAME, new filter_1.NameFilter(value, regEx, target)]]);\n        this.oftState.selectFilters(filters);\n    }\n    /**\n     * Called when the filters changed their selection.\n     *\n     * All specItems matching the filters are made visible, all non matching are made invisible.\n     *\n     * @param selectedFilters filters to be selected (includes the selection of all filters not only this one)\n     */\n    filterChanged(selectedFilters) {\n        this.log.info(\"filterChanged filters\", selectedFilters);\n        if (!selectedFilters.has(filter_1.NameFilter.FILTER_NAME)) {\n            this.changeValue(\"\");\n        }\n        else {\n            this.changeValue(selectedFilters.get(filter_1.NameFilter.FILTER_NAME).acceptedName);\n        }\n    }\n    changeValue(value) {\n        var _a, _b, _c;\n        const currentValue = ((_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.value.startsWith(\"+\")) ? (_b = this.inputElement) === null || _b === void 0 ? void 0 : _b.value.substring(5).trimStart() : (_c = this.inputElement) === null || _c === void 0 ? void 0 : _c.value;\n        this.log.info(\"changeValue from\", currentValue, \"to\", value);\n        if (this.inputElement != null && value != currentValue)\n            this.inputElement.value = value;\n    }\n} // SearchElement\nexports.SearchElement = SearchElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpecItemElement = void 0;\nconst filter_1 = require(\"@main/model/filter\");\nconst log_1 = require(\"@main/utils/log\");\nconst oft_state_1 = require(\"@main/model/oft_state\");\nconst specitems_1 = require(\"@main/model/specitems\");\nconst SELECT_CLASS = '_specitem-selected';\nconst MOUSE_ENTER_CLASS = '_specitem-mouse-enter';\nconst MOUSE_LEAVE_CLASS = '_specitem-mouse-leave';\nclass SpecItemElement {\n    constructor(specItem, oftStateController, project) {\n        var _a, _b;\n        this.specItem = specItem;\n        this.oftStateController = oftStateController;\n        this.project = project;\n        this.log = new log_1.Log(\"SpecItemElement\");\n        this.parentElement = null;\n        this.selected = false;\n        this._isActive = false;\n        //this.log.info(\"constructor\", specItem.index);\n        this.elementId = SpecItemElement.toElementId(specItem.index);\n        //this.log.info(\"SpecItemElement.constructor\", project.getTypeFieldModel());\n        const typeFilterModel = project.getTypeFieldModel()[this.specItem.type];\n        this.typeLabel = (_b = (_a = typeFilterModel.label) !== null && _a !== void 0 ? _a : typeFilterModel.name) !== null && _b !== void 0 ? _b : typeFilterModel.id;\n        this.element = this.createTemplate();\n    }\n    /**\n     * Inserts the specitem at a specific position into the children of the parentElement.\n     *\n     * @param parentElement the parentElement to at specitem as child\n     * @param index 0 as first element, -1 as last element, other index insert at specific position\n     */\n    insertToAt(parentElement, index = -1) {\n        if (this.parentElement !== null)\n            throw Error('Already attached to parentElement');\n        if (index === -1 || parentElement.is(':empty')) {\n            parentElement.append(this.element);\n        }\n        else if (index === 0) {\n            parentElement.find('div:eq(1)').before(this.element);\n        }\n        else {\n            parentElement.find(`div:eq(${index})`).after(this.element);\n        }\n        this.parentElement = parentElement;\n    }\n    /**\n     * Removes specitem from parentElement.\n     */\n    remove() {\n        if (this.parentElement == null)\n            throw Error('No parentElement');\n        this.parentElement.children(`#${this.elementId}`).remove();\n        this._isActive = false;\n    }\n    activate() {\n        if (this.isActive())\n            return;\n        if (this.parentElement == null)\n            throw Error('No parentElement');\n        this.element.show();\n        this._isActive = true;\n    }\n    deactivate() {\n        if (!this.isActive())\n            return;\n        if (this.parentElement == null)\n            throw Error('No parentElement');\n        this.element.hide();\n        this._isActive = false;\n    }\n    /**\n     * @return true of the element is not made invisible\n     */\n    isActive() {\n        return this.parentElement != null && this._isActive;\n    }\n    getScrollPosition() {\n        if (this.parentElement == null)\n            return undefined;\n        const elementOffset = this.element.offset().top;\n        const parentOffset = this.parentElement.offset().top;\n        const parentScrollTop = this.parentElement.scrollTop();\n        return elementOffset - parentOffset + parentScrollTop;\n    }\n    /**\n     * Place the selection focus on this item.\n     */\n    select() {\n        this.log.info(\"select\", this.specItem.index);\n        if (!this.isActive())\n            return;\n        if (this.selected)\n            return;\n        this.selected = true;\n        this.element.addClass(SELECT_CLASS);\n        this.element.removeClass(MOUSE_ENTER_CLASS);\n        this.element.removeClass(MOUSE_LEAVE_CLASS);\n    }\n    /**\n     * Remove selection focus from this item.\n     */\n    unselect() {\n        this.log.info(\"unselect index\", this.specItem.index);\n        if (!this.isActive())\n            return;\n        if (!this.selected)\n            return;\n        this.selected = false;\n        this.element.removeClass(SELECT_CLASS);\n    }\n    //\n    // private members\n    /**\n     * Dispatches a selection of this element to the OftStateController.\n     *\n     * @return true if element is attached to a parent and can be selected\n     */\n    notifySelection() {\n        if (!this.isActive())\n            return false;\n        if (this.selected) {\n            this.log.info(\"notifySelection already selected\");\n            return true;\n        }\n        this.log.info(\"notifySelection index\", this.specItem.index);\n        this.oftStateController.selectItem(this.specItem.index);\n        return true;\n    }\n    /**\n     * Set this element as the focus element or switch coverType\n     */\n    notifyFocus(coverType = oft_state_1.CoverType.coveredBy) {\n        if (!this.isActive())\n            return;\n        this.log.info(\"notifyFocus index\", this.specItem.index);\n        // Filter by covering or coveredBy\n        const acceptedIndexes = (() => {\n            switch (coverType) {\n                case oft_state_1.CoverType.covering:\n                    // indexes need to have at least on entry to filter out all other indexes. -1 will never match\n                    this.log.info(\"covering \", this.specItem.covering);\n                    return this.specItem.covering.length > 0 ? this.specItem.covering : [-1];\n                case oft_state_1.CoverType.coveredBy:\n                    // indexes need to have at least on entry to filter out all other indexes. -1 will never match\n                    this.log.info(\"coveredBy \", this.specItem.coveredBy);\n                    return this.specItem.coveredBy.length > 0 ? this.specItem.coveredBy : [-1];\n                default:\n                    // Default means any: return all items\n                    this.log.info(\"any\");\n                    return [];\n            }\n        })();\n        const filters = new Map([[filter_1.IndexFilter.FILTER_NAME, new filter_1.IndexFilter(acceptedIndexes)]]);\n        this.oftStateController.focusItem(this.specItem.index, coverType, filters);\n    }\n    static toElementId(index) {\n        return `to_${index.toString()}`;\n    }\n    mouseEntered() {\n        if (!this.selected) {\n            this.element.addClass(MOUSE_ENTER_CLASS);\n            this.element.removeClass(MOUSE_LEAVE_CLASS);\n        }\n    }\n    mouseLeave() {\n        if (!this.selected) {\n            this.element.addClass(MOUSE_LEAVE_CLASS);\n            this.element.removeClass(MOUSE_ENTER_CLASS);\n        }\n    }\n    createTemplate() {\n        const coverageTemplate = this.createCoverageTemplate();\n        const draft = this.createDraftTemplate();\n        const title = this.specItem.title != this.specItem.name ? `<b>${this.specItem.title}</b><br><br>` : '';\n        const template = $(`\n            <div class=\"specitem\" id=\"${this.elementId}\">\n                <div style=\"position:relative\">    \n                    <div class=\"_specitem-pin _img-button-pin\">\n                    </div>\n                    <div class=\"_specitem-header\">\n                        <div class=\"_specitem-name\">[${this.specItem.id}]</div>${draft}\n                        <div class=\"_specitem-status\">${coverageTemplate}</div>\n                    </div>\n                    <div class=\"_specitem-body\">\n                        ${title}\n                        ${this.specItem.content}                \n                    </div>                \n                </div>\n            </div>             \n        `);\n        return this.addListenersToTemplate(template);\n    }\n    createCoverageTemplate() {\n        return this.project.getTypeFieldModel().map((type, index) => {\n            switch (this.specItem.covered[index]) {\n                case 3:\n                    return `<div id=\"${this.elementId}_cov${index}\" class=\"_specitem-missing\">${type.label}</div>`;\n                case 2:\n                    return `<div id=\"${this.elementId}_cov${index}\" class=\"_specitem-covered\">${type.label}</div>`;\n                case 1:\n                    return `<div id=\"${this.elementId}_cov${index}\" class=\"_specitem-uncovered\">${type.label}</div>`;\n                default:\n                    return `<div id=\"${this.elementId}_cov${index}\" class=\"_specitem-none\">${type.label}</div>`;\n            }\n        }).join('');\n    }\n    createDraftTemplate() {\n        const statusName = this.project.getFieldModel(specitems_1.STATUS_FIELD_NAMES[0])[this.specItem.status].name;\n        return this.specItem.status != specitems_1.STATUS_ACCEPTED_INDEX && statusName != undefined ?\n            `<div class=\"_specitem-draft\">(${statusName})</div>` : '';\n    }\n    addListenersToTemplate(template) {\n        template.on({\n            click: () => this.notifySelection(),\n            mouseenter: () => this.mouseEntered(),\n            mouseleave: () => this.mouseLeave()\n        });\n        template.find('._specitem-pin').on({\n            click: () => this.notifyFocus()\n        });\n        return template;\n    }\n} // SpecItemElement\nexports.SpecItemElement = SpecItemElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpecItemsElement = void 0;\nconst navbar_element_1 = require(\"@main/view/navbar_element\");\nconst log_1 = require(\"@main/utils/log\");\nconst CONTENT_NAV_BAR_ID = \"#content-nav-bar\";\nconst CONTENT_SPEC_ITEM_COUNT = \"#specitem-count\";\nconst CONTENT_SPEC_ITEM_FOCUS_COUNT = \"#specitem-count-focused\";\nclass SpecItemsElement {\n    constructor(oftState) {\n        this.oftState = oftState;\n        this.specItemCountElement = $(CONTENT_SPEC_ITEM_COUNT);\n        this.specItemFocusCountElement = $(CONTENT_SPEC_ITEM_FOCUS_COUNT);\n        this.log = new log_1.Log(\"SpecItemsElement\");\n        this.navbarElement = new navbar_element_1.NavbarElement($(CONTENT_NAV_BAR_ID));\n        this.specItemCountElement = $(CONTENT_SPEC_ITEM_COUNT);\n    }\n    init() {\n        this.navbarElement.setChangeListener(\"btn-scroll-to-selection\", () => this.scrollToSelection());\n        this.navbarElement.setChangeListener(\"btn-history-back\", () => this.changeOftStateToPreviousState());\n        this.navbarElement.setChangeListener(\"btn-history-forward\", () => this.changeOftStateToNextState());\n        this.navbarElement.init();\n        return this;\n    }\n    activate() {\n        this.navbarElement.activate();\n    }\n    deactivate() {\n        this.navbarElement.deactivate();\n    }\n    isActive() {\n        return this.navbarElement.isActive();\n    }\n    updateNumberOfItems(numberOfItems, hasFocused) {\n        this.log.info(\"updateShownItems number:\", numberOfItems);\n        this.specItemCountElement.text(numberOfItems);\n        if (hasFocused) {\n            this.specItemFocusCountElement.show();\n        }\n        else {\n            this.specItemFocusCountElement.hide();\n        }\n    }\n    //\n    // private members\n    scrollToSelection() {\n        this.log.info(\"scrollToSelection\");\n        this.oftState.selectItem();\n    }\n    changeOftStateToPreviousState() {\n        this.oftState.toPreviousState();\n    }\n    changeOftStateToNextState() {\n        this.oftState.toNextState();\n    }\n} // SpecItemsElement\nexports.SpecItemsElement = SpecItemsElement;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n  @license\n  OpenFastTrace UX\n\n Copyright (C) 2024-2025 itsallcode.org, Bernd Haberstumpf\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as\n published by the Free Software Foundation, either version 3 of the\n License, or (at your option) any later version.\n \n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public\n License along with this program.  If not, see\n <http://www.gnu.org/licenses/gpl-3.0.html>.\n*/\nimport '@css/openfasttrace.scss';\nimport {ExpandableElements} from \"@main/view/expandable_elements.ts\";\nimport {SpecItemsController} from \"@main/controller/spec_items_controller\";\nimport {OftStateController} from \"@main/controller/oft_state_controller\";\nimport {FiltersElement} from \"@main/view/filters_element\";\nimport {OftStateBuilder} from \"@main/controller/oft_state_builder\";\nimport {SearchElement} from \"@main/view/search_element\";\nimport {DetailsElementFactory} from \"@main/view/details_element\";\nimport {SpecItemsElement} from \"@main/view/spec_items_element\";\nimport {Project} from \"@main/model/project\";\nimport {STATUS_FIELD_NAMES, TAG_FIELD_NAMES, TYPED_FIELD_NAMES} from \"@main/model/specitems\";\n\nfunction _init() {\n    console.log(\"START\");\n    const projectModel = window.specitem.project;\n    const specItems = window.specitem.specitems;\n    const fieldCounts = new Map([\n        [\"type\", projectModel.type_count],\n        [\"uncovered\", projectModel.uncovered_count],\n        [\"status\", projectModel.status_count],\n        [\"tags\", projectModel.tags_count],\n    ]);\n    const project = new Project(\n        projectModel.projectName,\n        projectModel.types,\n        TYPED_FIELD_NAMES,\n        projectModel.tags,\n        TAG_FIELD_NAMES,\n        projectModel.status,\n        STATUS_FIELD_NAMES,\n        projectModel.item_count,\n        projectModel.item_covered,\n        projectModel.item_uncovered,\n        fieldCounts,\n        window.metadata.fields\n    );\n\n    const oftStateBuilder = new OftStateBuilder().fromModel(project.fieldModels, specItems);\n    if (Number.parseInt(window.location.hash.substring(1)) > 0) {\n        oftStateBuilder.setSelectedIndex(Number.parseInt(window.location.hash.substring(1)));\n    }\n    const oftState = oftStateBuilder.build();\n    const oftStateController = new OftStateController(oftState);\n\n    new ExpandableElements().init();\n    new FiltersElement(project.fieldModels, oftStateController).init();\n\n    new SearchElement(oftStateController).init().activate();\n\n    const specItemsElement = new SpecItemsElement(oftStateController);\n    specItemsElement.init().activate();\n    new SpecItemsController(oftStateController, specItemsElement, project).init(specItems);\n\n    initHeader(project);\n    initFooter(project);\n\n    new DetailsElementFactory().build(specItems, project, oftStateController).init().activate();\n\n    oftStateController.init();\n    console.log(\"ACTIVE\");\n}\n\nfunction initHeader(project) {\n    $(\"#project-name\").append(project.projectName);\n}\n\nfunction initFooter(project) {\n    $(\"#specitem-total\").append(project.itemCount);\n    $(\"#specitem-covered\").append(project.itemCovered);\n    $(\"#specitem-uncovered\").append(project.itemUncovered);\n}\n\n$(_init);"],"names":["Object","defineProperty","exports","value","OftStateBuilder","oft_state_1","filter_1","constructor","oftState","OftState","this","fromModel","fieldConfigurations","specItems","length","selectedIndex","entries","forEach","filterName","_","selectedFilters","set","SelectionFilter","setSelectedIndex","console","log","setSelectedFilters","setFocusIndex","focusIndex","setUnfocusedFilters","unfocusedFilters","setFocusType","coverType","build","clone","OftStateController","oft_state_builder_1","log_1","change_event_1","oft_state_history_1","oftStateHistory","OftStateHistory","changeListeners","Map","isInitialized","Log","init","initialChangeEvent","createChangeEvent","EventType","Selection","Filters","Focus","sendChangeEvent","selectItem","index","info","notifyChangeWithHistory","notifyChangeWithoutHistory","selectAndShowItem","clear","unselectItem","focusItem","filters","createFocus","adjustFocus","delete","IndexFilter","FILTER_NAME","key","unFocusItem","CoverType","covering","selectFilters","size","clearFilters","toPreviousState","changeEvent","copyFrom","toNextState","addChangeListener","listener","eventTypes","eventType","listeners","has","get","Array","push","initializeListener","ChangeEvent","eventTypeIds","removeChangeListener","filter","item","pushEvent","types","of","Set","includes","flatMap","SpecItemsController","spec_item_element_1","focus_spec_item_element_1","FOCUS_SPECITEM_ELEMENT_ID","oftStateController","specItemsElement","project","focusSpecItemElement","specItemElements","specItemToElement","filterOrFocusChangeListener","event","handleFocusChange","focusChange","handleFilterChange","filterChange","selectionChangeListener","selectSpecItem","scrollToSpecItem","_specItemsElement","$","specItem","specItemElement","createSpecItemElement","insertSpecItemAt","SpecItemElement","createFocusSpecItemElement","FocusSpecItemElement","insertToAt","activate","setFocusSpecItem","_a","_b","removeFocusSpecItem","hide","show","select","cover","remove","focusedSpecItem","filterChanged","from","filteredSpecItems","getSpecItemsMatchingFilters","showOnlySelectedSpecItemElements","isMatchingAllFilters","map","every","matches","deactivate","updateNumberOfItems","unselect","newSelectedItemElement","undefined","isActive","scrollTop","visibleHeight","outerHeight","scrollBottom","elementScrollPosition","getScrollPosition","eventTypeValues","collections_1","enumNames","enumIds","handleSelectionChange","handler","NameFilter","NameFilterTarget","Filter","filterIndexes","super","specItemValues","getSpecItemValuesByFilterName","some","keys","isArray","flat","acceptedIndexes","acceptedName","isRegExp","nameFilterTarget","name","title","id","content","match","toLowerCase","_selectedIndex","_selectedFilters","_focusIndex","_unfocusedFilters","_coverType","other","isFocused","isFocusSelected","HistoryItem","history","currentPosition","maxSize","position","historyItem","splice","limitHistorySize","pullState","peekState","fromEntry","toEntry","removeFirst","Project","Field","specitems_1","label","tooltip","color","item_count","copyFromSameId","model","projectName","typedFieldNames","tags","tagFieldNames","statusNames","statusFieldNames","itemCount","itemCovered","itemUncovered","fieldCounts","configurations","fieldModels","typeCount","uncoveredCount","statusCount","tagCount","generateFieldModels","getTypeFieldModel","getFieldModel","TYPE_FIELD_NAME","hasField","fieldNames","fieldIds","createFieldModels","fieldConfiguration","namedFieldConfiguration","fieldId","idIndex","indexOf","count","createFieldModel","configuration","field","STATUS_ACCEPTED_INDEX","STATUS_FIELD_NAMES","TAG_FIELD_NAMES","TYPED_FIELD_NAMES","Deferred","timeOut","timer","run","cancel","setTimeout","clearTimeout","pushTo","array","entry","sameArrayValues","a","b","setA","setB","enumType","values","isNaN","Number","hideLogTags","showLogTags","hiddenLogTags","knownLogTags","resetLogTags","_allLogTags","_hiddenLogTags","tag","add","message","concat","sort","window","hidden","all","ButtonElement","CLASS_ON","ButtonType","buttonElement","changeListener","hasClass","buttonType","TOGGLER","_isOn","ACTIVATOR","PRESS","on","canToggleOnClick","toggle","canClicked","prop","off","isOn","addClass","removeClass","DetailsElement","DetailsElementFactory","SPECITEM_ID_CLASS","DETAILS_STATUS_ID","DETAILS_NEEDS_ID","DETAILS_COVERS_ID","DETAILS_TAGS_ID","DETAILS_SOURCE_ID","DETAILS_COMMENTS_ID","DETAILS_DEPENDENCIES_ID","ALL_TABLE_IDS","tableElement","removeAttr","attr","clearTable","updateTable","text","createNavHeaderLabel","createStatusValue","createTypesValue","needs","provides","createTagsValue","html","createSourceValue","createCommentsValue","replaceHyperlinkedSpecItems","depends","tableID","statusName","status","typeItems","join","tagFields","sourceFile","sourceLine","comments","dependenciesElement","specItemIndexes","find","addHyperlinkClickEvent","containerElement","preventDefault","url","target","getAttribute","parseInt","newIndex","ExpandableElements","each","element","expandableWidget","data","wrapInner","prepend","toggleExpansion","children","first","toggleClass","FilterElement","FilterElementFactory","navbar_element_1","selectElement","filterModel","selectionIndexes","navbarElement","filtersChangeListener","filtersChanged","addAllNoneSelector","appendFilterValues","notifySelectionChanged","toSelectionId","append","toggleOff","buttonBar","parent","NavbarElement","setChangeListener","selectAll","selectOff","trigger","toSelectionIndexes","option","toSelectionIndex","toArray","replace","changedSelectionIndexes","getSelectionIndexes","setSelections","changedIndexed","getButton","FiltersElement","filter_element_1","filterModels","filterElementFactory","COVERING_TEXT","IS_COVERED_BY_TEXT","updateCoverTypeElement","notifyFocus","notifySelection","notifySwitchCoverType","parentElement","selected","coveredBy","Error","createTemplate","coverageTemplate","createCoverageTemplate","draft","createDraftTemplate","createCoverTypeTemplate","template","elementId","typeLabel","version","addListenersToTemplate","button_element_1","buttons","_isActive","button","state","notifyChange","unsetChangeListener","SearchElement","async_1","inputLabel","formElement","inputElement","addSearchForm","disabled","searchForm","input","deferred","notifyInputChanged","regEx","startsWith","substring","trimStart","changeValue","_c","currentValue","SELECT_CLASS","MOUSE_ENTER_CLASS","MOUSE_LEAVE_CLASS","toElementId","typeFilterModel","type","is","before","after","offset","top","toString","mouseEntered","mouseLeave","covered","click","mouseenter","mouseleave","SpecItemsElement","CONTENT_SPEC_ITEM_COUNT","specItemCountElement","specItemFocusCountElement","scrollToSelection","changeOftStateToPreviousState","changeOftStateToNextState","numberOfItems","hasFocused","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","r","Symbol","toStringTag","projectModel","specitem","specitems","type_count","uncovered_count","status_count","tags_count","item_covered","item_uncovered","metadata","fields","oftStateBuilder","location","hash","initHeader","initFooter"],"sourceRoot":""}